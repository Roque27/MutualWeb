@model MAASoft.HomeBankingWeb.Sitio.ViewModels.SociosViewModel
@{
    ViewBag.Title = "Usuarios";
}

@using (Html.BeginForm("Index", "Socios", FormMethod.Get))
{
    <div class="form-inline form-filtros">
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.NombreApellidoORazonSocial, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.NombreApellidoORazonSocial, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.IdSucursal, new { @class = "control-label" })
            @Html.DropDownListFor(m => m.IdSucursal, Model.SucursalesSelectList, "Seleccionar...", new { @class = "form-control" })
        </div>
        <button type="submit" class="btn btn-primary">Filtrar</button>
    </div>
}
<div style="margin-top: 10px;">
    <a href="@Url.Action("Agregar", "Socios")" class="btn btn-info"><span class="glyphicon glyphicon-plus"></span> Nuevo Socio</a>
</div>

@if (Model.TieneItems)
{
    <div class="table-responsive" style="margin-top: 10px;">
        <table class="table table-striped table-bordered">
            <tr>
                <th>@Html.DisplayNameFor(m => m.Items[0].Email)</th>
                <th>@Html.DisplayNameFor(m => m.Items[0].NombreApellidoORazonSocial)</th>
                <th>@Html.DisplayNameFor(m => m.Items[0].SucursalNombre)</th>
                <th>@Html.DisplayNameFor(m => m.Items[0].EstaBloqueadoFormateado)</th>
                <th></th>
            </tr>

            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>@item.Email</td>
                    <td>@item.NombreApellidoORazonSocial</td>
                    <td>@item.SucursalNombre</td>
                    <td>@item.EstaBloqueadoFormateado</td>
                    <td class="text-center">
                        <a href="@Url.Action("Editar", "Socios", new { id = item.Id })" class="btn btn-xs btn-info" title="Editar"><span class="glyphicon glyphicon-list-alt"></span></a>
                        <a href="@Url.Action("VerTramitesSubidos", "Socios", new { id = item.Id })" class="btn btn-xs btn-info" title="Tramites Subidos"><span class="glyphicon glyphicon-file"-></span></a>
                        <div style="display: inline-block">
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()
                                if (item.EstaBloqueado)
                                {
                                    <button type="submit" class="btn btn-xs btn-success" title="Desbloquear">
                                        <span class="glyphicon glyphicon-ok-circle"></span>
                                    </button>
                                    <input type="hidden" name="Operacion" value="Desbloquear" />
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-xs btn-warning btn-bloquear" title="Bloquear">
                                        <span class="glyphicon glyphicon-ban-circle"></span>
                                    </button>
                                    <input type="hidden" name="Operacion" value="Bloquear" />
                                }
                                <input type="hidden" name="IdSocio" value="@item.Id" />
                            }
                        </div>
                    </td>
                </tr>
            }

        </table>
    </div>
    <div class="container text-center">
        <div class="row">
            @Helpers.Paginador(Model.Paginacion, Request.Url.AbsoluteUri)
        </div>
    </div>
}
else
{
    <div class="container">
        <p>No hay usuarios disponibles para mostrar.</p>
    </div>
}
