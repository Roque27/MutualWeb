@using MAASoft.HomeBankingWeb.Sitio.Core;
@using MAASoft.HomeBankingWeb.Sitio.Models;
@model MAASoft.HomeBankingWeb.Sitio.ViewModels.ServiciosCuotasViewModel
@{
    ViewBag.Title = MAASoft.HomeBankingWeb.Sitio.Configuracion.Configuracion.ServiciosCuotasTitulo;

    string urlExportacion = MAASoft.HomeBankingWeb.Sitio.Helpers.UrlHelper.GenerarUrl(Request.Url.AbsoluteUri, new Dictionary<string, string> { { "exp", true.ToString() } });
}

<h2 class="page-title">@ViewBag.Title</h2>
@using (Html.BeginForm("ServiciosCuotas", "Home", FormMethod.Get))
{
    <div class="form-inline form-filtros">
        <div class="form-group">
            @Html.LabelFor(m => m.Desde)
            @Html.TextBoxFor(m => m.Desde, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", size = "10" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Hasta)
            @Html.TextBoxFor(m => m.Hasta, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", size = "10" })
        </div>
        <input type="submit" value="Filtrar" class="btn btn-primary" />
    </div>
}

@if (ViewBag.Errores != null)
{
    @Html.Partial("_Errores")
}
else
{
    if (Model.TieneItems)
    {
        @Html.Partial("_BotonDescargar")
        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(m => m.Items[0].Fecha)</th>
                        <th>@Html.DisplayNameFor(m => m.Items[0].Nombre)</th>
                        <th>@Html.DisplayNameFor(m => m.Items[0].Importe)</th>
                        <th>@Html.DisplayNameFor(m => m.Items[0].Gastos)</th>
                        <th>@Html.DisplayNameFor(m => m.Items[0].Total)</th>
                        <th>@Html.DisplayNameFor(m => m.Items[0].FechaPago)</th>
                        <th>@Html.DisplayNameFor(m => m.Items[0].Cuota)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td>@Formato.FormatoFecha(item.Fecha)</td>
                            <td>@item.Nombre</td>
                            <td class="text-right">@Formato.FormatoMoneda(item.Importe)</td>
                            <td class="text-right">@Formato.FormatoMoneda(item.Gastos)</td>
                            <td class="text-right">@Formato.FormatoMoneda(item.Total)</td>
                            <td>@Formato.FormatoFecha(item.FechaPago)</td>
                            <td class="text-right">@item.Cuota</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        @Helpers.Paginador(Model.Paginacion, Request.Url.ToString())
    }
    else
    {
        <div class="alert alert-info">
            No hay elementos disponibles para mostrar.
        </div>
    }

    <p>
        <strong>Cuotas pendientes:</strong> @Model.CuotasPendientes<br />
        <strong>Cuotas impagas:</strong> @Model.CuotasImpagas<br />
        <strong>Cuotas pagas:</strong> @Model.CuotasPagas<br />
        <strong>Total pagado:</strong> @Formato.FormatoMoneda(Model.TotalPagado)<br />
    </p>
}

@section bodyScripts {
<script type="text/javascript">
    $(function () {
        configDateTimePicker();
    });
</script>    
}